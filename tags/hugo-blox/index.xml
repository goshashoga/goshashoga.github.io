<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Blox | Hugo Academic CV Theme</title>
    <link>http://localhost:1313/tags/hugo-blox/</link>
      <atom:link href="http://localhost:1313/tags/hugo-blox/index.xml" rel="self" type="application/rss+xml" />
    <description>Hugo Blox</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 07 Sep 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu7729264130191091259.png</url>
      <title>Hugo Blox</title>
      <link>http://localhost:1313/tags/hugo-blox/</link>
    </image>
    
    <item>
      <title>Git</title>
      <link>http://localhost:1313/post/post11/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post11/</guid>
      <description>&lt;p&gt;Управление версиями с помощью Git
Git — это распределённая система управления версиями (VCS), которая используется для отслеживания изменений в коде и совместной работы над проектами. С её помощью можно сохранять все изменения в проекте, возвращаться к предыдущим версиям и параллельно разрабатывать разные функции (ветки).&lt;/p&gt;
&lt;p&gt;Основные концепции Git:
Репозиторий: Хранилище проекта, в котором сохраняется вся история изменений.
Коммит (commit): Снимок текущего состояния файлов проекта. Каждый коммит хранит изменения и позволяет вернуться к конкретному моменту разработки.
Ветки (branches): Механизм для параллельной работы над разными версиями проекта. Основная ветка по умолчанию — main или master. Дополнительные ветки используются для разработки новых функций, исправления ошибок и экспериментов.
Слияние (merge): Объединение изменений из одной ветки в другую.
Клонирование (clone): Создание копии удалённого репозитория на локальном компьютере.
Push и Pull: Команды для отправки изменений в удалённый репозиторий (push) и получения изменений из него (pull).&lt;/p&gt;
&lt;p&gt;Основные команды Git:
git init — инициализация нового репозитория.
git clone — клонирование удалённого репозитория.
git add &amp;lt;файл&amp;gt; — добавление файлов в область подготовки (staging).
git commit -m &amp;ldquo;сообщение&amp;rdquo; — создание коммита с описанием изменений.
git status — отображение состояния репозитория.
git log — просмотр истории изменений.
git branch — управление ветками.
git merge &amp;lt;ветка&amp;gt; — слияние ветки с текущей.
git push — отправка изменений в удалённый репозиторий.
git pull — получение изменений из удалённого репозитория.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Моя неделя</title>
      <link>http://localhost:1313/post/post1/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post1/</guid>
      <description>&lt;p&gt;На прошедшей неделе, как студент информатики, я погрузился в череду учебных и внеучебных событий. Понедельник начался с лекции по алгоритмам и структурам данных, где мы разобрали сложные алгоритмы сортировки. После обеда я провел несколько часов за проектом по программированию, работая над улучшением производительности кода для нашего группового проекта.&lt;/p&gt;
&lt;p&gt;В среду я был занят подготовкой к практическому занятию по базам данных, где мы внедряли и тестировали SQL-запросы. В четверг меня ждала лекция по искусственному интеллекту, где мы изучали основы машинного обучения. Вечером я посетил семинар по кибербезопасности, который помог мне лучше понять методы защиты данных.&lt;/p&gt;
&lt;p&gt;Выходные я решил провести более расслабленно. В субботу я встретился с друзьями, и мы поиграли в настольные игры, а в воскресенье — устроил небольшую прогулку по парку, чтобы отдохнуть от учебной суеты и набраться сил на следующую неделю.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
